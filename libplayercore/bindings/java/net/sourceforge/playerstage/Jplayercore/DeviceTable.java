/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.35
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.sourceforge.playerstage.Jplayercore;

public class DeviceTable {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected DeviceTable(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(DeviceTable obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      playercore_javaJNI.delete_DeviceTable(swigCPtr);
    }
    swigCPtr = 0;
  }

  public DeviceTable() {
    this(playercore_javaJNI.new_DeviceTable(), true);
  }

  public Device AddDevice(player_devaddr_t addr, Driver driver, boolean havelock) {
    long cPtr = playercore_javaJNI.DeviceTable_AddDevice__SWIG_0(swigCPtr, this, player_devaddr_t.getCPtr(addr), addr, Driver.getCPtr(driver), driver, havelock);
    return (cPtr == 0) ? null : new Device(cPtr, false);
  }

  public Device AddDevice(player_devaddr_t addr, Driver driver) {
    long cPtr = playercore_javaJNI.DeviceTable_AddDevice__SWIG_1(swigCPtr, this, player_devaddr_t.getCPtr(addr), addr, Driver.getCPtr(driver), driver);
    return (cPtr == 0) ? null : new Device(cPtr, false);
  }

  public Device GetDevice(player_devaddr_t addr, boolean lookup_remote) {
    long cPtr = playercore_javaJNI.DeviceTable_GetDevice__SWIG_0(swigCPtr, this, player_devaddr_t.getCPtr(addr), addr, lookup_remote);
    return (cPtr == 0) ? null : new Device(cPtr, false);
  }

  public Device GetDevice(player_devaddr_t addr) {
    long cPtr = playercore_javaJNI.DeviceTable_GetDevice__SWIG_1(swigCPtr, this, player_devaddr_t.getCPtr(addr), addr);
    return (cPtr == 0) ? null : new Device(cPtr, false);
  }

  public Device GetDevice(String str_addr, boolean lookup_remote) {
    long cPtr = playercore_javaJNI.DeviceTable_GetDevice__SWIG_2(swigCPtr, this, str_addr, lookup_remote);
    return (cPtr == 0) ? null : new Device(cPtr, false);
  }

  public Device GetDevice(String str_addr) {
    long cPtr = playercore_javaJNI.DeviceTable_GetDevice__SWIG_3(swigCPtr, this, str_addr);
    return (cPtr == 0) ? null : new Device(cPtr, false);
  }

  public Device GetFirstDevice() {
    long cPtr = playercore_javaJNI.DeviceTable_GetFirstDevice(swigCPtr, this);
    return (cPtr == 0) ? null : new Device(cPtr, false);
  }

  public Device GetNextDevice(Device entry) {
    long cPtr = playercore_javaJNI.DeviceTable_GetNextDevice(swigCPtr, this, Device.getCPtr(entry), entry);
    return (cPtr == 0) ? null : new Device(cPtr, false);
  }

  public int Size() {
    return playercore_javaJNI.DeviceTable_Size(swigCPtr, this);
  }

  public void UpdateDevices() {
    playercore_javaJNI.DeviceTable_UpdateDevices(swigCPtr, this);
  }

  public int StartAlwaysonDrivers() {
    return playercore_javaJNI.DeviceTable_StartAlwaysonDrivers(swigCPtr, this);
  }

  public void AddRemoteDriverFn(SWIGTYPE_p_f_player_devaddr_t_p_void__p_Driver rdf, SWIGTYPE_p_void arg) {
    playercore_javaJNI.DeviceTable_AddRemoteDriverFn(swigCPtr, this, SWIGTYPE_p_f_player_devaddr_t_p_void__p_Driver.getCPtr(rdf), SWIGTYPE_p_void.getCPtr(arg));
  }

}
