/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.35
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.sourceforge.playerstage.Jplayertcp;

class playertcp_javaJNI {
  public final static native int PLAYERTCP_DEFAULT_PORT_get();
  public final static native int PLAYERTCP_READBUFFER_SIZE_get();
  public final static native int PLAYERTCP_WRITEBUFFER_SIZE_get();
  public final static native long new_PlayerTCP();
  public final static native void delete_PlayerTCP(long jarg1);
  public final static native void PlayerTCP_Lock(long jarg1, PlayerTCP jarg1_);
  public final static native void PlayerTCP_Unlock(long jarg1, PlayerTCP jarg1_);
  public final static native void PlayerTCP_InitGlobals();
  public final static native void PlayerTCP_thread_set(long jarg1, PlayerTCP jarg1_, long jarg2);
  public final static native long PlayerTCP_thread_get(long jarg1, PlayerTCP jarg1_);
  public final static native int PlayerTCP_Listen__SWIG_0(long jarg1, PlayerTCP jarg1_, int[] jarg2, int jarg3, int[] jarg4);
  public final static native int PlayerTCP_Listen__SWIG_1(long jarg1, PlayerTCP jarg1_, int[] jarg2, int jarg3);
  public final static native int PlayerTCP_Listen__SWIG_2(long jarg1, PlayerTCP jarg1_, int jarg2);
  public final static native long PlayerTCP_AddClient(long jarg1, PlayerTCP jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, boolean jarg6, int[] jarg7, boolean jarg8);
  public final static native int PlayerTCP_Update(long jarg1, PlayerTCP jarg1_, int jarg2);
  public final static native int PlayerTCP_Accept(long jarg1, PlayerTCP jarg1_, int jarg2);
  public final static native void PlayerTCP_Close(long jarg1, PlayerTCP jarg1_, int jarg2);
  public final static native int PlayerTCP_ReadClient__SWIG_0(long jarg1, PlayerTCP jarg1_, int jarg2);
  public final static native int PlayerTCP_ReadClient__SWIG_1(long jarg1, PlayerTCP jarg1_, long jarg2);
  public final static native int PlayerTCP_Read(long jarg1, PlayerTCP jarg1_, int jarg2, boolean jarg3);
  public final static native int PlayerTCP_Write(long jarg1, PlayerTCP jarg1_, boolean jarg2);
  public final static native int PlayerTCP_WriteClient(long jarg1, PlayerTCP jarg1_, int jarg2);
  public final static native void PlayerTCP_DeleteClients(long jarg1, PlayerTCP jarg1_);
  public final static native void PlayerTCP_ParseBuffer(long jarg1, PlayerTCP jarg1_, int jarg2);
  public final static native int PlayerTCP_HandlePlayerMessage(long jarg1, PlayerTCP jarg1_, int jarg2, long jarg3);
  public final static native void PlayerTCP_DeleteClient(long jarg1, PlayerTCP jarg1_, long jarg2, boolean jarg3);
  public final static native boolean PlayerTCP_Listening(long jarg1, PlayerTCP jarg1_, int jarg2);
  public final static native long PlayerTCP_GetHost(long jarg1, PlayerTCP jarg1_);
  public final static native void playerxdr_function_t_interf_set(long jarg1, playerxdr_function_t jarg1_, long jarg2);
  public final static native long playerxdr_function_t_interf_get(long jarg1, playerxdr_function_t jarg1_);
  public final static native void playerxdr_function_t_type_set(long jarg1, playerxdr_function_t jarg1_, long jarg2);
  public final static native long playerxdr_function_t_type_get(long jarg1, playerxdr_function_t jarg1_);
  public final static native void playerxdr_function_t_subtype_set(long jarg1, playerxdr_function_t jarg1_, long jarg2);
  public final static native long playerxdr_function_t_subtype_get(long jarg1, playerxdr_function_t jarg1_);
  public final static native void playerxdr_function_t_packfunc_set(long jarg1, playerxdr_function_t jarg1_, long jarg2);
  public final static native long playerxdr_function_t_packfunc_get(long jarg1, playerxdr_function_t jarg1_);
  public final static native void playerxdr_function_t_copyfunc_set(long jarg1, playerxdr_function_t jarg1_, long jarg2);
  public final static native long playerxdr_function_t_copyfunc_get(long jarg1, playerxdr_function_t jarg1_);
  public final static native void playerxdr_function_t_cleanupfunc_set(long jarg1, playerxdr_function_t jarg1_, long jarg2);
  public final static native long playerxdr_function_t_cleanupfunc_get(long jarg1, playerxdr_function_t jarg1_);
  public final static native void playerxdr_function_t_clonefunc_set(long jarg1, playerxdr_function_t jarg1_, long jarg2);
  public final static native long playerxdr_function_t_clonefunc_get(long jarg1, playerxdr_function_t jarg1_);
  public final static native void playerxdr_function_t_freefunc_set(long jarg1, playerxdr_function_t jarg1_, long jarg2);
  public final static native long playerxdr_function_t_freefunc_get(long jarg1, playerxdr_function_t jarg1_);
  public final static native void playerxdr_function_t_sizeoffunc_set(long jarg1, playerxdr_function_t jarg1_, long jarg2);
  public final static native long playerxdr_function_t_sizeoffunc_get(long jarg1, playerxdr_function_t jarg1_);
  public final static native long new_playerxdr_function_t();
  public final static native void delete_playerxdr_function_t(long jarg1);
  public final static native long playerxdr_get_packfunc(long jarg1, long jarg2, long jarg3);
  public final static native long playerxdr_get_copyfunc(long jarg1, long jarg2, long jarg3);
  public final static native long playerxdr_get_cleanupfunc(long jarg1, long jarg2, long jarg3);
  public final static native long playerxdr_get_clonefunc(long jarg1, long jarg2, long jarg3);
  public final static native long playerxdr_get_freefunc(long jarg1, long jarg2, long jarg3);
  public final static native long playerxdr_get_sizeoffunc(long jarg1, long jarg2, long jarg3);
  public final static native int playerxdr_ftable_add(long jarg1, playerxdr_function_t jarg1_, int jarg2);
  public final static native int playerxdr_ftable_add_multi(long jarg1, playerxdr_function_t jarg1_, int jarg2);
  public final static native void playerxdr_ftable_init();
  public final static native long playerxdr_deepcopy_message(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native long playerxdr_clone_message(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void playerxdr_free_message(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void playerxdr_cleanup_message(long jarg1, long jarg2, long jarg3, long jarg4);
}
